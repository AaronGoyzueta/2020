#!/bin/bash

set -eou pipefail

readonly SEED=212

readonly DATA=../../data

readonly RANDOM_STARTS=25

mkdir -p models dev-scores test-scores

#for TRAIN_TSV in "${DATA}/train/"*"_train.tsv"; do
TRAIN_TSV="${DATA}/train/lit_train.tsv" #; do
    # Path hacking.
    DEV_TSV="${TRAIN_TSV//train/dev}"
    TEST_TSV="${TRAIN_TSV//train/test}"
    LANGUAGE="$(basename $TRAIN_TSV _train.tsv)"
    # Output symbols.
    OSYMS="${LANGUAGE}_phones.sym"
    cut -f2 "${TRAIN_TSV}" "${DEV_TSV}" "${TEST_TSV}" \
        | ngramsymbols \
        > "${OSYMS}"
    # Alignments.
    #./align.py \
    #    --seed="${SEED}" \
    #    --random_starts="${RANDOM_STARTS}" \
    #    --tsv_path="${TRAIN_TSV}" \
    #    --output_token_type="${OSYMS}" \
    #    --encoder_path="${LANGUAGE}.enc" \
    #    --far_path="${LANGUAGE}.far"
    # Loops over LM orders from 3 (trigram) to 9. 
    for ORDER in $(seq 3 9); do
        MODEL="models/${LANGUAGE}-${ORDER}.fst"
        # NGram model.
        #./model \
        #    --order="${ORDER}" \
        #    --encoder_path="${LANGUAGE}.enc" \
        #    --far_path="${LANGUAGE}.far" \
        #    --fst_path="${MODEL}"
        # Evaluates dev.
        ./predict \
            --input_path="${DEV_TSV}" \
            --fst_path="${MODEL}" \
            --output_token_type="${OSYMS}" \
            --output_path="${LANGUAGE}.txt"
        ./evaluate \
            --gold_path="${DEV_TSV}" \
            --hypo_path="${LANGUAGE}.txt" \
            > "dev-scores/${LANGUAGE}-${ORDER}.txt"
        # Evaluation.
        ./predict \
            --input_path="${TEST_TSV}" \
            --fst_path="${MODEL}" \
            --output_token_type="${OSYMS}" \
            --output_path="${LANGUAGE}.txt"
        ./evaluate \
            --gold_path="${TEST_TSV}" \
            --hypo_path="${LANGUAGE}.txt" \
            > "test-scores/${LANGUAGE}-${ORDER}.txt"
    done
    rm -f "${LANGUAGE}_phones.sym" \
          "${LANGUAGE}.enc" \
          "${LANGUAGE}.far" \
          "${LANGUAGE}.txt"
#done
